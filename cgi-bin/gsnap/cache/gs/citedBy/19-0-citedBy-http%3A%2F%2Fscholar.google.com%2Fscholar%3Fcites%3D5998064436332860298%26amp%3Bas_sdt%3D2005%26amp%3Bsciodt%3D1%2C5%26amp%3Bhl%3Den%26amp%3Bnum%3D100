Total results = 19
<div class="gs_r" style="z-index:400"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB0" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW0"><a href="http://webdocs.cs.ualberta.ca/~zilles/zeugmannZ08survey.pdf" class=yC1><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from ualberta.ca</span><span class="gs_ggsS">ualberta.ca <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.sciencedirect.com/science/article/pii/S0304397508001400" class=yC0>Learning recursive functions: A survey</a></h3><div class="gs_a">T Zeugmann, <a href="/citations?user=gkUY7QMAAAAJ&amp;hl=en&amp;oi=sra">S Zilles</a> - Theoretical Computer Science, 2008 - Elsevier</div><div class="gs_rs">Studying the learnability of classes of recursive functions has attracted considerable interest <br>for at least four decades. Starting with Gold&#39;s (1967) model of learning in the limit, many <br>variations, modifications and extensions have been proposed. These models differ in <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=17660134303999589849&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 14</a> <a href="/scholar?q=related:2f2VA5VmFfUJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=17660134303999589849&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 8 versions</a> <a onclick="return gs_ocit(event,'2f2VA5VmFfUJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:399"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB1" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW1"><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.133.1424&amp;rep=rep1&amp;type=pdf" class=yC3><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from psu.edu</span><span class="gs_ggsS">psu.edu <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.springerlink.com/index/30508hpk5cedmc48.pdf" class=yC2>Avoiding coding tricks by hyperrobust learning</a></h3><div class="gs_a">M Ott, F Stephan - Computational Learning Theory, 1999 - Springer</div><div class="gs_rs">The present work introduces and justifies the notion of hyperrobust learning where one fixed <br>learner has to learn all functions in a given class plus their images under primitive recursive <br>operators. The following is shown: This notion of learnability does not change if the class <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=5899452273826143878&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 13</a> <a href="/scholar?q=related:hh7HHpYQ31EJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="http://direct.bl.uk/research/1C/50/RN059505105.html?source=googlescholar" class="gs_nph" class=yC4>BL Direct</a> <a href="/scholar?cluster=5899452273826143878&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 31 versions</a> <a onclick="return gs_ocit(event,'hh7HHpYQ31EJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:398"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB2" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW2"><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.96.6122&amp;rep=rep1&amp;type=pdf" class=yC6><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from psu.edu</span><span class="gs_ggsS">psu.edu <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.sciencedirect.com/science/article/pii/S0022000000917008" class=yC5>Robust learning is rich</a></h3><div class="gs_a"><a href="/citations?user=9oNh1Z0AAAAJ&amp;hl=en&amp;oi=sra">S Jain</a>, C Smith, R Wiehagen - Journal of Computer and System Sciences, 2001 - Elsevier</div><div class="gs_rs">Intuitively, a class of objects is robustly learnable if not only this class itself is learnable but <br>all of its computable transformations remain learnable as well. In that sense, being learnable <br>robustly seems to be a desirable property in all fields of learning. We will study this <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=3404211858011198165&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 11</a> <a href="/scholar?q=related:1RLuCKYwPi8J:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="http://direct.bl.uk/research/22/0D/RN093995557.html?source=googlescholar" class="gs_nph" class=yC7>BL Direct</a> <a href="/scholar?cluster=3404211858011198165&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 6 versions</a> <a onclick="return gs_ocit(event,'1RLuCKYwPi8J')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:397"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB3" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW3"><a href="http://www.mat.unisi.it/personalpages/sorbi/public_html/papers/RUSHEAD.pdf#page=53" class=yC9><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from unisi.it</span><span class="gs_ggsS">unisi.it <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.sciencedirect.com/science/article/pii/S0304397501004054" class=yC8>Learning classes of approximations to non-recursive functions</a></h3><div class="gs_a">F Stephan, T Zeugmann - Theoretical computer science, 2002 - Elsevier</div><div class="gs_rs">Blum and Blum (Inform. and Control 28 (1975) 125â155) showed that a class B of suitable <br>recursive approximations to the halting problem K is reliably EX-learnable but left it open <br>whether or not B is in NUM. By showing B to be not in NUM we resolve this old problem. <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=10506301346325652113&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 8</a> <a href="/scholar?q=related:keLy4mjhzZEJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=10506301346325652113&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 33 versions</a> <a onclick="return gs_ocit(event,'keLy4mjhzZEJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:396"><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.sciencedirect.com/science/article/pii/S030439750100086X" class=yCA>Avoiding coding tricks by hyperrobust learning</a></h3><div class="gs_a">M Ott, F Stephan - Theoretical computer science, 2002 - Elsevier</div><div class="gs_rs">The present work introduces and justifies the notion of hyperrobust learning where one fixed <br>learner has to learn all functions in a given class plus their images under primitive recursive <br>operators. The following are shown: The notion of learnability does not change if the class <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=12928713960546294505&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 6</a> <a href="/scholar?q=related:6dr-DNkEbLMJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=12928713960546294505&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 7 versions</a> <a onclick="return gs_ocit(event,'6dr-DNkEbLMJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:395"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB5" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW5"><a href="http://cs5594.userapi.com/u11728334/docs/5bd09dd62f02/Klaus_P_Jantke_Discovery_Science_318857.pdf#page=109" class=yCC><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from userapi.com</span><span class="gs_ggsS">userapi.com <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.springerlink.com/index/pn5cud3da5rgr59d.pdf" class=yCB>Divide and Conquer Machine Learning for a Genomics Analogy Problem</a></h3><div class="gs_a"><a href="/citations?user=Xa_5OCoAAAAJ&amp;hl=en&amp;oi=sra">M Ouyang</a>, <a href="/citations?user=lMV_QwEAAAAJ&amp;hl=en&amp;oi=sra">J Case</a>, J Burnside - Discovery Science, 2001 - Springer</div><div class="gs_rs">Genomic strings are not of fixed length, but provide one-dimensional spatial data that do not <br>divide for conquering by machine learning into manageable. xed size chunks obeying <br>Dietterich independent and identically distributed assumption. We nonetheless need to <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=18052850205795818121&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 6</a> <a href="/scholar?q=related:iRrMM52biPoJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="http://direct.bl.uk/research/51/60/RN105605705.html?source=googlescholar" class="gs_nph" class=yCD>BL Direct</a> <a href="/scholar?cluster=18052850205795818121&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 9 versions</a> <a onclick="return gs_ocit(event,'iRrMM52biPoJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:394"><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.sciencedirect.com/science/article/pii/S0022000004000212" class=yCE>Robust learningârich and poor</a></h3><div class="gs_a"><a href="/citations?user=lMV_QwEAAAAJ&amp;hl=en&amp;oi=sra">J Case</a>, <a href="/citations?user=9oNh1Z0AAAAJ&amp;hl=en&amp;oi=sra">S Jain</a>, F Stephan, R Wiehagen - Journal of Computer and System  &hellip;, 2004 - Elsevier</div><div class="gs_rs">A class C of recursive functions is called robustly learnable in the sense I (where I is any <br>success criterion of learning) if not only C itself but even all transformed classes Î (C), <br>where Î is any general recursive operator, are learnable in the sense I. It was already <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=3998343178207249082&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 6</a> <a href="/scholar?q=related:ukImu-_3fDcJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=3998343178207249082&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 2 versions</a> <a onclick="return gs_ocit(event,'ukImu-_3fDcJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:393"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB7" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW7"><a href="http://www-alg.ist.hokudai.ac.jp/~thomas/publications/alt99sz.pdf" class=yC10><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from hokudai.ac.jp</span><span class="gs_ggsS">hokudai.ac.jp <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.springerlink.com/index/EKX087X862286207.pdf" class=yCF>On the uniform learnability of approximations to non-recursive functions</a></h3><div class="gs_a">F Stephan, T Zeugmann - Algorithmic Learning Theory, 1999 - Springer</div><div class="gs_rs">Blum and Blum (1975) showed that a class BB of suitable recursive approximations to the <br>halting problem is reliably EX-learnable. These investigations are carried on by showing that <br>BB is neither in NUM nor robustly EX-learnable. Since the definition of the class BB is <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=1883637453533473836&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 5</a> <a href="/scholar?q=related:LOx7t0gGJBoJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=1883637453533473836&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 15 versions</a> <a onclick="return gs_ocit(event,'LOx7t0gGJBoJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:392"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB8" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW8"><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.36.2906&amp;rep=rep1&amp;type=pdf" class=yC12><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from psu.edu</span><span class="gs_ggsS">psu.edu <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.springerlink.com/index/5n75eb1v97fxh6qq.pdf" class=yC11>Robust LearningâRich and Poor</a></h3><div class="gs_a"><a href="/citations?user=lMV_QwEAAAAJ&amp;hl=en&amp;oi=sra">J Case</a>, <a href="/citations?user=9oNh1Z0AAAAJ&amp;hl=en&amp;oi=sra">S Jain</a>, F Stephan, R Wiehagen - Computational Learning Theory, 2001 - Springer</div><div class="gs_rs">Aclass C of recursive functions is called robustly learnable in the sense I (where I is any <br>success criterion of learning) if not only C itself but even all transformed classes T (C) where <br>T is any general recursive operator, are learnable in the sense I. It was already shown <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=12012739699022818539&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 4</a> <a href="/scholar?q=related:6-x8KxzTtaYJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="http://direct.bl.uk/research/61/2C/RN099833762.html?source=googlescholar" class="gs_nph" class=yC13>BL Direct</a> <a href="/scholar?cluster=12012739699022818539&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 21 versions</a> <a onclick="return gs_ocit(event,'6-x8KxzTtaYJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:391"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB9" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW9"><a href="http://www.eecis.udel.edu/~case/papers/rft-directions.pdf" class=yC15><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from udel.edu</span><span class="gs_ggsS">udel.edu <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.springerlink.com/index/l5p6329uk2633r03.pdf" class=yC14>Directions for computability theory beyond pure mathematical</a></h3><div class="gs_a"><a href="/citations?user=lMV_QwEAAAAJ&amp;hl=en&amp;oi=sra">J Case</a> - Mathematical problems from applied logic II, 2007 - Springer</div><div class="gs_rs">This paper begins by briefly indicating the principal, non-standard motivations of the author for <br>his decades of work in Computability Theory (CT), aka Recursive Function Theory. Then it discusses <br>its proposed, general directions beyond those from pure mathematics for CT. These <b> ...</b> </div><div class="gs_fl"><a href="/scholar?cites=1389332872072028677&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 4</a> <a href="/scholar?q=related:BWKg2uLmRxMJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=1389332872072028677&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 4 versions</a> <a onclick="return gs_ocit(event,'BWKg2uLmRxMJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:390"><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.springerlink.com/index/1233111895g360t7.pdf" class=yC16>Learning real polynomials with a Turing machine</a></h3><div class="gs_a">D Cheung - Algorithmic Learning Theory, 1999 - Springer</div><div class="gs_rs">We provide an algorithm to PAC learn multivariate polynomials with real coefficients. The <br>instance space from which labeled samples are drawn is IR N but the coordinates of such <br>samples are known only approximately. The algorithm is iterative and the main ingredient <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=907796611349495798&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 3</a> <a href="/scholar?q=related:9j_KUzUkmQwJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=907796611349495798&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 7 versions</a> <a onclick="return gs_ocit(event,'9j_KUzUkmQwJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:389"><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.sciencedirect.com/science/article/pii/S0890540104000550" class=yC17>Learning all subfunctions of a function</a></h3><div class="gs_a"><a href="/citations?user=9oNh1Z0AAAAJ&amp;hl=en&amp;oi=sra">S Jain</a>, E Kinber, R Wiehagen - Information and Computation, 2004 - Elsevier</div><div class="gs_rs">Sublearning, a model for learning of subconcepts of a concept, is presented. Sublearning a <br>class of total recursive functions informally means to learn all functions from that class <br>together with all of their subfunctions. While in language learning it is known to be <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=120476829132828347&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 2</a> <a href="/scholar?q=related:u64grAkFrAEJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=120476829132828347&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 3 versions</a> <a onclick="return gs_ocit(event,'u64grAkFrAEJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:388"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB12" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW12"><a href="http://www.comp.nus.edu.sg/~sanjay/paps/robsur.pdf" class=yC19><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from nus.edu.sg</span><span class="gs_ggsS">nus.edu.sg <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><span class="gs_ctc"><span class="gs_ct1">[PDF]</span><span class="gs_ct2">[PDF]</span></span> <a href="http://www.comp.nus.edu.sg/~sanjay/paps/robsur.pdf" class=yC18>A tour of robust learning</a></h3><div class="gs_a"><a href="/citations?user=9oNh1Z0AAAAJ&amp;hl=en&amp;oi=sra">S Jain</a>, F Stephan - &hellip;  and Models. Perspectives East and West.  &hellip;, 2003 - comp.nus.edu.sg</div><div class="gs_rs">Abstract BarzdinÅ¡ conjectured that only recursively enumerable classes of functions can be <br>learned robustly. This conjecture, which was finally refuted by Fulk, initiated the study of <br>notions of robust learning. The present work surveys research on robust learning and <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=16730565030686759482&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 2</a> <a href="/scholar?q=related:OhqoyUDoLugJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=16730565030686759482&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 5 versions</a> <a onclick="return gs_ocit(event,'OhqoyUDoLugJ')" href="#" class="gs_nph">Cite</a> <div class="gs_rm_dd gs_nph"><a href="#" class="gs_rm_l" onclick="return gs_md_opn('gs_rm_md12', event)">More<span class="gs_ico"></span></a><div id="gs_rm_md12" class="gs_md_wn" style="display:none"><a href="http://scholar.googleusercontent.com/scholar?q=cache:OhqoyUDoLugJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5" class="gs_md_li">View as HTML</a></div>  </div>  </div></div></div>
<div class="gs_r" style="z-index:387"><div class="gs_ri"><h3 class="gs_rt"><a href="http://projecteuclid.org/euclid.jsl/1305810752" class=yC1A>Robust separations in inductive inference</a></h3><div class="gs_a">M Fulk - Journal of Symbolic Logic, 2011 - projecteuclid.org</div><div class="gs_rs">Abstract Results in recursion-theoretic inductive inference have been criticized as <br>depending on unrealistic self-referential examples. JM BÄrzdiÅÅ¡ proposed a way of ruling <br>out such examples, and conjectured that one of the earliest results of inductive inference <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=5223478208757372245&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=19">Cited by 1</a> <a href="/scholar?q=related:VRX6dMGFfUgJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=5223478208757372245&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 2 versions</a> <a onclick="return gs_ocit(event,'VRX6dMGFfUgJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:386"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB14" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW14"><a href="http://www-alg.ist.hokudai.ac.jp/~thomas/publications/doitr166sz.ps.gz" class=yC1C><span class="gs_ggsL"><span class=gs_ctg2>[PS]</span> from hokudai.ac.jp</span><span class="gs_ggsS">hokudai.ac.jp <span class=gs_ctg2>[PS]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><span class="gs_ctc"><span class="gs_ct1">[PS]</span><span class="gs_ct2">[PS]</span></span> <a href="http://www-alg.ist.hokudai.ac.jp/~thomas/publications/doitr166sz.ps.gz" class=yC1B>DOI Technical Report</a></h3><div class="gs_a">F Stephan, T Zeugmann - 1999 - www-alg.ist.hokudai.ac.jp</div><div class="gs_rs">Abstract Blum and Blum (1975) showed that a class B of suitable recursive approximations <br>to the halting problem K is reliably EX-learnable but left it open whether or not B is in NUM. <br>By showing B to be not in NUM we resolve this old problem.</div><div class="gs_fl"><a href="/scholar?q=related:ypBkC6zAZg8J:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a onclick="return gs_ocit(event,'ypBkC6zAZg8J')" href="#" class="gs_nph">Cite</a> <div class="gs_rm_dd gs_nph"><a href="#" class="gs_rm_l" onclick="return gs_md_opn('gs_rm_md14', event)">More<span class="gs_ico"></span></a><div id="gs_rm_md14" class="gs_md_wn" style="display:none"><a href="http://scholar.googleusercontent.com/scholar?q=cache:ypBkC6zAZg8J:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5" class="gs_md_li">View as HTML</a></div>  </div>  </div></div></div>
<div class="gs_r" style="z-index:385"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB15" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW15"><a href="http://www.comp.nus.edu.sg/~sanjay/paps/subex.pdf" class=yC1E><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from nus.edu.sg</span><span class="gs_ggsS">nus.edu.sg <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.springerlink.com/index/l5rax18a05jhx5br.pdf" class=yC1D>Learning all subfunctions of a function</a></h3><div class="gs_a"><a href="/citations?user=9oNh1Z0AAAAJ&amp;hl=en&amp;oi=sra">S Jain</a>, E Kinber, R Wiehagen - Learning Theory and Kernel Machines, 2003 - Springer</div><div class="gs_rs">Sublearning, a model for learning of subconcepts of a concept, is presented. Sublearning a <br>class of total recursive functions informally means to learn all functions from that class <br>together with all of their subfunctions. While in language learning it is known to be <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:FXBRXtWXmCoJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="http://direct.bl.uk/research/1A/50/RN136584155.html?source=googlescholar" class="gs_nph" class=yC1F>BL Direct</a> <a href="/scholar?cluster=3069370088719216661&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 6 versions</a> <a onclick="return gs_ocit(event,'FXBRXtWXmCoJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:384"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB16" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW16"><a href="http://www.comp.nus.edu.sg/~sanjay/paps/robsur-c.pdf" class=yC21><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from nus.edu.sg</span><span class="gs_ggsS">nus.edu.sg <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><span class="gs_ctc"><span class="gs_ct1">[PDF]</span><span class="gs_ct2">[PDF]</span></span> <a href="http://www.comp.nus.edu.sg/~sanjay/paps/robsur-c.pdf" class=yC20>A Survey of Robust Learning</a></h3><div class="gs_a"><a href="/citations?user=9oNh1Z0AAAAJ&amp;hl=en&amp;oi=sra">S Jain</a> - 2008 - comp.nus.edu.sg</div><div class="gs_rs">Abstract. A class of objects is said to be robustly learnable if not only this class itself is <br>learnable but all of its computable âtransformationsâ are also learnable. We study robust <br>learning within the framework of inductive inference. A class of recursive functions is said <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:td7IYjEIaMwJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=14729031589518958261&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 6 versions</a> <a onclick="return gs_ocit(event,'td7IYjEIaMwJ')" href="#" class="gs_nph">Cite</a> <div class="gs_rm_dd gs_nph"><a href="#" class="gs_rm_l" onclick="return gs_md_opn('gs_rm_md16', event)">More<span class="gs_ico"></span></a><div id="gs_rm_md16" class="gs_md_wn" style="display:none"><a href="http://scholar.googleusercontent.com/scholar?q=cache:td7IYjEIaMwJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5" class="gs_md_li">View as HTML</a></div>  </div>  </div></div></div>
<div class="gs_r" style="z-index:383"><div class="gs_ri"><h3 class="gs_rt"><a href="http://books.google.com/books?hl=en&amp;lr=&amp;id=NFu8uP4GqykC&amp;oi=fnd&amp;pg=PA215&amp;ots=-bzu6iUVzI&amp;sig=Rz3etvGB-V_S7ggfHv7338uv97M" class=yC22>A TOUR OF ROBUST LEARNING</a></h3><div class="gs_a">F Stephant - Computability and Models: Perspectives East and  &hellip;, 2003 - books.google.com</div><div class="gs_rs">Abstract BarzdinS conjectured that only recursively enumerable classes of functions can be <br>learned robustly. This conjecture, which was finally refuted by Fulk, initiated the study of <br>notions of robust learning. The present work surveys research on robust learning and <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:m5TegYY-cQwJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a onclick="return gs_ocit(event,'m5TegYY-cQwJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:382"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB18" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW18"><a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.95.6279&amp;rep=rep1&amp;type=pdf" class=yC24><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from psu.edu</span><span class="gs_ggsS">psu.edu <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><span class="gs_ctc"><span class="gs_ct1">[PDF]</span><span class="gs_ct2">[PDF]</span></span> <a href="http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.95.6279&amp;rep=rep1&amp;type=pdf" class=yC23>Robust LearningâRich and Poor</a></h3><div class="gs_a">JCS Jainb, F Stephanc, R Wiehagend - Citeseer</div><div class="gs_rs">Abstract A class C of recursive functions is called robustly learnable in the sense I (where I is <br>any success criterion of learning) if not only C itself but even all transformed classes Î (C) <br>where Î is any general recursive operator, are learnable in the sense I. It was already <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:F-gF6cXSbSAJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=2336755529135024151&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5">All 2 versions</a> <a onclick="return gs_ocit(event,'F-gF6cXSbSAJ')" href="#" class="gs_nph">Cite</a> <div class="gs_rm_dd gs_nph"><a href="#" class="gs_rm_l" onclick="return gs_md_opn('gs_rm_md18', event)">More<span class="gs_ico"></span></a><div id="gs_rm_md18" class="gs_md_wn" style="display:none"><a href="http://scholar.googleusercontent.com/scholar?q=cache:F-gF6cXSbSAJ:scholar.google.com/&amp;hl=en&amp;num=19&amp;as_sdt=0,5&amp;sciodt=0,5" class="gs_md_li">View as HTML</a></div>  </div>  </div></div></div>
