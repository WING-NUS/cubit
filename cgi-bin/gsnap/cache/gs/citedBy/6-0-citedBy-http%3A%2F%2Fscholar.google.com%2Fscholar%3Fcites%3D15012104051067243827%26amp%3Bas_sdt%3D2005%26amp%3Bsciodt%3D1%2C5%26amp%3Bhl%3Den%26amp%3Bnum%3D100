Total results = 6
<div class="gs_r" style="z-index:400"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB0" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW0"><a href="http://datasearch.ruc.edu.cn/~chunbinlin/vldb_2010/files/papers/R112.pdf" class=yC1><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from ruc.edu.cn</span><span class="gs_ggsS">ruc.edu.cn <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://dl.acm.org/citation.cfm?id=1920998" class=yC0>Achieving high output quality under limited resources through structure-based spilling in xml streams</a></h3><div class="gs_a">M Wei, <a href="/citations?user=iIFHZ1UAAAAJ&amp;hl=en&amp;oi=sra">EA Rundensteiner</a>, M Mani - Proceedings of the VLDB  &hellip;, 2010 - dl.acm.org</div><div class="gs_rs">Abstract Because of high volumes and unpredictable arrival rates, stream processing <br>systems are not always able to keep up with input data-resulting in buffer overflow and <br>uncontrolled loss of data. To produce eventually complete results, load spilling, which <b> ...</b></div><div class="gs_fl"><a href="/scholar?cites=9663394552399564397&amp;as_sdt=2005&amp;sciodt=0,5&amp;hl=en&amp;num=6">Cited by 6</a> <a href="/scholar?q=related:bY44hCVGG4YJ:scholar.google.com/&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=9663394552399564397&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">All 15 versions</a> <a onclick="return gs_ocit(event,'bY44hCVGG4YJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:399"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB1" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW1"><a href="http://www.wpi.edu/Pubs/ETD/Available/etd-121811-234909/unrestricted/mwei.pdf" class=yC3><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from wpi.edu</span><span class="gs_ggsS">wpi.edu <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="http://www.wpi.edu/Pubs/ETD/Available/etd-121811-234909/" class=yC2>Continuously Providing Approximate Results under Limited Resources: Load Shedding and Spilling in XML Streams</a></h3><div class="gs_a">M Wei - 2011 - wpi.edu</div><div class="gs_rs">Abstract Because of the high volume and unpredictable arrival rates, stream processing <br>systems may not always be able to keep up with the input data streams, resulting in buffer <br>overflow and uncontrolled loss of data. To continuously supply online results, two <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:xGa8DSATURsJ:scholar.google.com/&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=1968375540527949508&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">All 3 versions</a> <a onclick="return gs_ocit(event,'xGa8DSATURsJ')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:398"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB2" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW2"><a href="http://wcms.inf.ed.ac.uk/idar09/papers-and-abstracts/idar09-submission-14.pdf" class=yC5><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from ed.ac.uk</span><span class="gs_ggsS">ed.ac.uk <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><span class="gs_ctc"><span class="gs_ct1">[PDF]</span><span class="gs_ct2">[PDF]</span></span> <a href="http://wcms.inf.ed.ac.uk/idar09/papers-and-abstracts/idar09-submission-14.pdf" class=yC4>Achieving High Output Utility under Limited Resources through Structure-based Shedding and Spilling in XML Streams</a></h3><div class="gs_a">M Wei, <a href="/citations?user=iIFHZ1UAAAAJ&amp;hl=en&amp;oi=sra">EA Rundensteiner</a>, M Mani - 2009 - wcms.inf.ed.ac.uk</div><div class="gs_rs">Abstract Because of high volumes and unpredictable arrival rates, stream processing <br>systems are not always able to keep up with input data streamsâresulting in buffer overflow <br>and uncontrolled loss of data. Load shedding and spilling are two core techniques <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:1nlzN4WKjrQJ:scholar.google.com/&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=13010488678285539798&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">All 2 versions</a> <a onclick="return gs_ocit(event,'1nlzN4WKjrQJ')" href="#" class="gs_nph">Cite</a> <div class="gs_rm_dd gs_nph"><a href="#" class="gs_rm_l" onclick="return gs_md_opn('gs_rm_md2', event)">More<span class="gs_ico"></span></a><div id="gs_rm_md2" class="gs_md_wn" style="display:none"><a href="http://scholar.googleusercontent.com/scholar?q=cache:1nlzN4WKjrQJ:scholar.google.com/&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5" class="gs_md_li">View as HTML</a></div>  </div>  </div></div></div>
<div class="gs_r" style="z-index:397"><div class="gs_ri"><h3 class="gs_rt"><a href="http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4722688" class=yC6>Fine-Grained Progressive Algorithm Based on HMJ</a></h3><div class="gs_a">G Chen, G Li, B Yang, X Tang&hellip; - Computer Science and  &hellip;, 2008 - ieeexplore.ieee.org</div><div class="gs_rs">Abstract Wide-area distribution raises significant performance problems for traditional query <br>processing techniques as data access becomes less predictable due to link congestion, <br>load imbalances, and temporary outages. Non-blocking joining query execution is a <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:aLRCRNn8eD4J:scholar.google.com/&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=4501625837640135784&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">All 6 versions</a> <a onclick="return gs_ocit(event,'aLRCRNn8eD4J')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:396"><div class="gs_ggs gs_fl"><button type="button" id="gs_ggsB4" class="gs_btnFI gs_in_ib gs_btn_half"><span class="gs_wr"><span class="gs_bg"></span><span class="gs_lbl"></span><span class="gs_ico"></span></span></button><div class="gs_md_wp" id="gs_ggsW4"><a href="https://scholarbank.nus.edu.sg/bitstream/handle/10635/16466/phd-thesis.pdf?sequence=1" class=yC8><span class="gs_ggsL"><span class=gs_ctg2>[PDF]</span> from nus.edu.sg</span><span class="gs_ggsS">nus.edu.sg <span class=gs_ctg2>[PDF]</span></span></a></div></div><div class="gs_ri"><h3 class="gs_rt"><a href="https://scholarbank.nus.edu.sg/handle/10635/16466" class=yC7>Progressive Query Processing</a></h3><div class="gs_a">TOKWEE HYONG - 2009 - scholarbank.nus.edu.sg</div><div class="gs_rs">Many join processing techniques for data streams have been proposed, the techniques are <br>often designed for a specific data model (eg relational), and cannot be easily generalized to <br>other data models. An important criteria to support interactivity, and ensure a good user <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:JXoKbpI__d8J:scholar.google.com/&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=16140126537709681189&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">All 7 versions</a> <a onclick="return gs_ocit(event,'JXoKbpI__d8J')" href="#" class="gs_nph">Cite</a></div></div></div>
<div class="gs_r" style="z-index:395"><div class="gs_ri"><h3 class="gs_rt"><a href="http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4756747" class=yC9>Progressive Hash-Merge Join Algorithm</a></h3><div class="gs_a">G Chen, G Li, B Yang, X Tang&hellip; - &hellip; Intelligence and Industrial &hellip;, 2008 - ieeexplore.ieee.org</div><div class="gs_rs">Abstract In data streams or Web scenario at highly variable and unpredictable rates, most <br>fast join algorithms to date rely upon shifting to external join stage as soon as possible when <br>blocked in order to enhance efficiency. But they have trouble with the following issues: the <b> ...</b></div><div class="gs_fl"><a href="/scholar?q=related:1b37otDLg5QJ:scholar.google.com/&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">Related articles</a> <a href="/scholar?cluster=10701621236510473685&amp;hl=en&amp;num=6&amp;as_sdt=0,5&amp;sciodt=0,5">All 3 versions</a> <a onclick="return gs_ocit(event,'1b37otDLg5QJ')" href="#" class="gs_nph">Cite</a></div></div></div>
